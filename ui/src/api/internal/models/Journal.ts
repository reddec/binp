/* tslint:disable */
/* eslint-disable */
/**
 * PYRED
 * Internal APIs
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Record,
    RecordFromJSON,
    RecordFromJSONTyped,
    RecordToJSON,
} from './';

/**
 * 
 * @export
 * @interface Journal
 */
export interface Journal {
    /**
     * 
     * @type {number}
     * @memberof Journal
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Journal
     */
    operation: string;
    /**
     * 
     * @type {string}
     * @memberof Journal
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof Journal
     */
    startedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Journal
     */
    finishedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Journal
     */
    error?: string;
    /**
     * 
     * @type {number}
     * @memberof Journal
     */
    duration?: number;
    /**
     * 
     * @type {Array<Record>}
     * @memberof Journal
     */
    records: Array<Record>;
}

export function JournalFromJSON(json: any): Journal {
    return JournalFromJSONTyped(json, false);
}

export function JournalFromJSONTyped(json: any, ignoreDiscriminator: boolean): Journal {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'operation': json['operation'],
        'description': json['description'],
        'startedAt': (new Date(json['started_at'])),
        'finishedAt': !exists(json, 'finished_at') ? undefined : (new Date(json['finished_at'])),
        'error': !exists(json, 'error') ? undefined : json['error'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'records': ((json['records'] as Array<any>).map(RecordFromJSON)),
    };
}

export function JournalToJSON(value?: Journal | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'operation': value.operation,
        'description': value.description,
        'started_at': (value.startedAt.toISOString()),
        'finished_at': value.finishedAt === undefined ? undefined : (value.finishedAt.toISOString()),
        'error': value.error,
        'duration': value.duration,
        'records': ((value.records as Array<any>).map(RecordToJSON)),
    };
}


